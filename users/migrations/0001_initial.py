# Generated by Django 3.2.7 on 2021-09-09 19:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school_structure', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Электронная почта')),
                ('image', models.ImageField(blank=True, upload_to=users.utils.create_path_media_user, verbose_name='Изображение')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('phone_number', models.CharField(blank=True, max_length=17, unique=True, validators=[users.utils.phone_validation], verbose_name='Телефонный номер')),
                ('extra_info', models.JSONField(blank=True, null=True, verbose_name='Дополнительная информация')),
                ('is_account_confirmation', models.BooleanField(default=False, verbose_name='Подтверждение аккаунта в системе')),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentsStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=255, verbose_name='Отчество')),
                ('phone_number', models.CharField(blank=True, max_length=17, unique=True, validators=[users.utils.phone_validation], verbose_name='Телефонный номер')),
            ],
            options={
                'verbose_name': 'Родители',
                'unique_together': {('first_name', 'last_name', 'phone_number')},
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_learning', models.DateField(auto_now=True, verbose_name='Начало обучения')),
                ('end_learning', models.DateField(blank=True, verbose_name='Конец обучения')),
                ('educational_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='school_structure.educationalсlass', verbose_name='Образовательный класс')),
                ('parents', models.ManyToManyField(blank=True, to='users.ParentsStudent', verbose_name='Родители')),
                ('score', models.ManyToManyField(blank=True, related_name='students', to='school_structure.ScoreStudent', verbose_name='оценки')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Учащийся',
            },
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(choices=[(1, 'Учитель'), (2, 'Руководитель направления'), (3, 'Администратор'), (4, 'Директор')], verbose_name='Должность')),
                ('school', models.ManyToManyField(blank=True, related_name='students', to='school_structure.School', verbose_name='Образовательная организация')),
                ('timetable', models.ManyToManyField(blank=True, related_name='staff_users', to='school_structure.TimeTable', verbose_name='График работы')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Сотрудник',
            },
        ),
    ]
